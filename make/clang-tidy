
tidy_base_checks=*perf*,*modernize*,*misc*,*google*,*readability*,*optin*,-clang-diagnostic-error
modern_excludes=,-modernize-replace-random-shuffle,-modernize-use-override,-modernize-concat-nested-namespaces,-modernize-avoid-c-arrays
readability_excludes=,-readability-magic-numbers,-readability-convert-member-functions-to-static,-readability-inconsistent-declaration-parameter-name,-readability-function-size,-readability-named-parameter,-readability-container-size-empty,-readability-implicit-bool-conversion,-readability-else-after-return
misc_excludes=,-misc-non-private-member-variables-in-classes,-misc-unused-parameters,-misc-unused-using-decls,-misc-definitions-in-headers,-misc-unconventional-assign-operator
google_excludes=,-google-runtime-references,-google-global-names-in-headers,-google-build-using-namespace,-google-runtime-int
things_we_should_look_at=,-google-readability-casting,-modernize-use-using,-modernize-pass-by-value,-readability-implicit-bool-conversion,-readability-const-return-type,-readability-avoid-const-params-in-decls,--modernize-return-braced-init-list
tidy_checks?= $(tidy_base_checks) $(modern_excludes) $(readability_excludes) $(misc_excludes) $(google_excludes) $(things_we_should_look_at)

.PHONY: clang-tidy
clang-tidy:
		find $(folder) -name '$(files).cpp' -exec clang-tidy {} -checks='$(tidy_checks)' -header-filter='./stan/*' -- $(CXXFLAGS) $(LDFLAGS) $(LDLIBS) $(INC_GTEST) $(CXXFLAGS_GTEST) $(CPPFLAGS) \;

.PHONY: clang-tidy-fix
clang-tidy-fix:
		find $(folder) -name '$(files).cpp' -exec clang-tidy {} -checks='$(tidy_checks)' -header-filter='./stan/*' -fix -fix-errors -- $(CXXFLAGS) $(LDFLAGS) $(LDLIBS) $(INC_GTEST) $(CXXFLAGS_GTEST) $(CPPFLAGS) \;
